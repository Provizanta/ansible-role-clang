---

- name: establish updated facts
  set_fact:
    project: 
     "{{ project | combine(
         {
           'owner': project['owner'] if project['owner'] is defined else project['author']['name'] if project.get('author',{}).get('name',{}) else '',
           'normalized_name': project['name'] | replace(' ', substitutes[' ']) | lower,
           'path': path + '/' + project['name'] | replace(' ', substitutes[' ']) | lower
         }, recursive=True) }}"
    build: "{{ build | lower if build is defined else None }}"

- name: establish project skeleton
  file:
    path: "{{ project['path'] }}/{{ item.dest }}"
    state: directory
  when: item.use | default(True)
  with_items:
    - { dest: "build" }
    - { dest: "include/{{ project['normalized_name'] }}" }
    - { dest: "src" }
    - { dest: "doc" }

- import_tasks: tests.yml
  when: test is defined

- import_tasks: build/cmake.yml
  when: build == 'cmake'

- name: establish project readme
  template:
    src: "README.md"
    dest: "{{ project['path'] }}/README.md"

- name: establish project license
  import_role:
    name: dev/create/license
  vars:
    license: "{{ project['license'] | default('wtfpl') }}"

- name: establish ignore file
  import_role:
    name: dev/create/ignore_file
  vars:
    path: "{{ project['path'] }}"
    language: "C++"
    ignore: "{{ lookup('template', 'ignore_list.j2') }}"
  when:
    - scm is defined
